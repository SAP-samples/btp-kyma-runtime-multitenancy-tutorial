################### XSUAA ###################
---
apiVersion: services.cloud.sap.com/v1
kind: ServiceInstance
metadata:
  name: xsuaa-service
spec:
  serviceOfferingName: xsuaa
  servicePlanName: application
  parameters:
    xsappname: multitenant-kyma-demo
    tenant-mode: shared  # define the application provider tenant as a shared tenant
    description: Security profile of called application
    scopes:
    - name: $XSAPPNAME.Callback
      description: With this scope set, the callbacks for subscribe, unsubscribe and getDependencies can be called.
      grant-as-authority-to-apps:
      - $XSAPPNAME(application,sap-provisioning,tenant-onboarding)  # provide access to the SAP SaaS Provisioning service SAP Authorization and Trust Management service (technical name: saas-registry) for calling callbacks and getting the dependencies API by granting scopes:  
    oauth2-configuration:
      redirect-uris:
      - https://*.<clusterdomain>/**  # Replace <clusterdomain> with the domain of your Kyma cluster

---
apiVersion: services.cloud.sap.com/v1
kind: ServiceBinding
metadata:
  name: xsuaa-service-binding
spec:
  serviceInstanceName: xsuaa-service
  secretName: xsuaa-service-binding

################### SaaS Provisioning Service ###################
---
apiVersion: services.cloud.sap.com/v1
kind: ServiceInstance
metadata:
  name: saas-registry-service
spec:
  serviceOfferingName: saas-registry
  servicePlanName: application
  parameters:
    # the xsappname refers to the one defined in xsuaa service
    xsappname: multitenant-kyma-demo
    displayName: Multitenancy Sample in Kyma
    description: A NodeJS application to show how to use the SaaS registry to build a multi-tenant application on BTP Kyma Runtime
    category: 'Provider: TIA' # category of the SaaS application in the SAP BTP Service Catalog
    appUrls:
      # url registered in the kyma-broker which handles SaaS provisioning (subscription/deletion of saas instances)
      onSubscription: https://<subaccount-subdomain>-node.<clusterdomain>/callback/v1.0/tenants/{tenantId} # Replace <subaccount-subdomain> with your subaccount subdomain, and <clusterdomain> with your Kyma cluster domain
      onSubscriptionAsync: false
      onUnSubscriptionAsync: false
---
apiVersion: services.cloud.sap.com/v1
kind: ServiceBinding
metadata:
  creationTimestamp: null
  name: saas-registry-service-binding
spec:
  serviceInstanceName: saas-registry-service
  secretName: saas-registry-service-binding